apiVersion: closedlooppooc.closedloop.io/v1
kind: ClosedLoop
metadata:
  labels:
    app.kubernetes.io/name: closedloop
    app.kubernetes.io/instance: closedloop-sample
    app.kubernetes.io/part-of: closedloop
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: closedloop
  name: closedloop-v2
spec:
  monitoring: #monitoringObject
    monitoringkind:
      monitoringkindname: Monitoringv2
      requestedpod: true
    policy:
      name: closedloop/inner/monitoring
      description: monitoring
      engine: 
        kind: opa
        url: "http://192.168.49.2:32633"
        api: 
          policy: /v1/policies/
          data: /v1/data/
      rule:
        name: closedloop.inner.monitoring
        body: |
          package closedloop.inner.monitoring

          import rego.v1

          default cpu := "ok"

          cpu := result if {
              some cpu_idx
              data.Monitoringpolicies.Data[cpu_idx] == "cpu"
              cpu_idx_tresh := sprintf("%v%v", [cpu_idx, "-thresholdvalue"])
              cpu_idx_kind := sprintf("%v%v", [cpu_idx, "-thresholdkind"])
              data.Monitoringpolicies.Tresholdkind[cpu_idx_kind] == "inferior"
              to_number(input.cpu) < to_number(data.Monitoringpolicies.Tresholdvalue[cpu_idx_tresh])
              result := "low"
          }

          cpu := result if {
              some cpu_idx
              data.Monitoringpolicies.Data[cpu_idx] == "cpu"
              cpu_idx_tresh := sprintf("%v%v", [cpu_idx, "-thresholdvalue"])
              cpu_idx_kind := sprintf("%v%v", [cpu_idx, "-thresholdkind"])
              data.Monitoringpolicies.Tresholdkind[cpu_idx_kind] == "superior"
              to_number(input.cpu) > to_number(data.Monitoringpolicies.Tresholdvalue[cpu_idx_tresh])
              result := "high"
          }

          cpu := result if {
              some cpu_idx
              data.Monitoringpolicies.Data[cpu_idx] == "cpu"
              cpu_idx_tresh := sprintf("%v%v", [cpu_idx, "-thresholdvalue"])
              cpu_idx_kind := sprintf("%v%v", [cpu_idx, "-thresholdkind"])
              data.Monitoringpolicies.Tresholdkind[cpu_idx_kind] == "uniform"
              to_number(input.cpu) == to_number(data.Monitoringpolicies.Tresholdvalue[cpu_idx_tresh])
              result := "ok"
          }

          default memory := "ok"

          memory := result if {
              some memory_idx
              data.Monitoringpolicies.Data[memory_idx] == "memory"
              memory_idx_tresh := sprintf("%v%v", [memory_idx, "-thresholdvalue"])
              memory_idx_kind := sprintf("%v%v", [memory_idx, "-thresholdkind"])
              data.Monitoringpolicies.Tresholdkind[memory_idx_kind] == "inferior"
              to_number(input.memory) < to_number(data.Monitoringpolicies.Tresholdvalue[memory_idx_tresh])
              result := "low"
          }

          memory := result if {
              some memory_idx
              data.Monitoringpolicies.Data[memory_idx] == "memory"
              memory_idx_tresh := sprintf("%v%v", [memory_idx, "-thresholdvalue"])
              memory_idx_kind := sprintf("%v%v", [memory_idx, "-thresholdkind"])
              data.Monitoringpolicies.Tresholdkind[memory_idx_kind] == "superior"
              to_number(input.memory) > to_number(data.Monitoringpolicies.Tresholdvalue[memory_idx_tresh])
              result := "high"
          }

          memory := result if {
              some memory_idx
              data.Monitoringpolicies.Data[memory_idx] == "memory"
              memory_idx_tresh := sprintf("%v%v", [memory_idx, "-thresholdvalue"])
              memory_idx_kind := sprintf("%v%v", [memory_idx, "-thresholdkind"])
              data.Monitoringpolicies.Tresholdkind[memory_idx_kind] == "uniform"
              to_number(input.memory) == to_number(data.Monitoringpolicies.Tresholdvalue[memory_idx_tresh])
              result := "ok"
          }
      kind: threshold
      data:
        name: data.closedloop.inner.monitoring
        key: 
          - metric
          - threshold
          - value
        value:
          - [cpu, inferior, "5"]
          - [memory, inferior, "50"]
      input:
        schema: "@monitoring_input.json" 
        value:
          cpu: "#spec.message.cpu"
          memory: "#spec.message.memory"
      result:
        schema: "@monitoring_result.json"
        value:
          cpu: "cr:decision#spec.message.cpu" 
          memory: "cr:decision#spec.message.memory"  
  decision:
    decisionkind:
      decisionkindname: Decision
    policy:
      name: closedloop/inner/decision
      description: decision
      engine: 
        kind: opa
        url: "http://192.168.49.2:32633"
        api: 
          policy: /v1/policies/
          data: /v1/data/
      rule:
        name: closedloop.inner.decision
        body: "@closedloop.inner.decision.rego"
      kind: priority
      data:
        name: data.closedloop.inner.decision
        key:
          - priority
        value:
          - [cpu]
          - [memory]
      input:
        schema: "@decision_input.json" 
        value:
          cpu: "#spec.message.cpu"
          memory: "#spec.message.memory"
      result:
        schema: "@decision_result.json"
        value:
          metric: "cr:execution#spec.message.metric" 
          action: "cr:execution#spec.message.action"   
  execution:
    apiVersion: closedlooppooc.closedloop.io/v1
    kind: Execution
    spec:
      message:
        action: "No Action"
      executiontypeid: 1


